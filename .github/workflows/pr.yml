name: Check

on:
  pull_request

jobs:
  danger:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Danger
        uses: danger/kotlin@1.3.3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  assemble:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - uses: actions/setup-java@v5
        with:
          distribution: 'zulu'
          java-version-file: .ci-java-version

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: wrapper

      - name: Run assemble task
        run: ./gradlew assemble

  detekt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - uses: actions/setup-java@v5
        with:
          distribution: 'zulu'
          java-version-file: .ci-java-version

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: wrapper

      - name: Run detekt
        run: ./gradlew detektAll

  ktlint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Run ktlint
        run: ./format --no-format

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - uses: actions/setup-java@v5
        with:
          distribution: 'zulu'
          java-version-file: .ci-java-version

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: wrapper

      - name: Run Android lint
        run: ./gradlew lintRelease

  android-device-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - uses: actions/setup-java@v5
        with:
          distribution: 'zulu'
          java-version-file: .ci-java-version

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: wrapper

      - name: Run Android device tests
        run: ./gradlew pixel2Api35DebugAndroidTest

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: android-device-test-results
          path: |
            **/build/reports/androidTests/**

  test:
    strategy:
      matrix:
        os: [ macos-latest, ubuntu-latest ]
    runs-on: ${{matrix.os}}
    steps:
      - uses: actions/checkout@v5

      - uses: actions/setup-java@v5
        with:
          distribution: 'zulu'
          java-version-file: .ci-java-version

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: wrapper

      - name: Run tests
        run: ./gradlew allTests
        if: matrix.os == 'ubuntu-latest'

      - name: Run Apple tests
        run: ./gradlew iosX64Test macosX64Test
        if: matrix.os == 'macos-latest'

env:
  GRADLE_OPTS: -Dorg.gradle.daemon=false -Dkotlin.incremental=false -Dorg.gradle.jvmargs="-Xmx16g -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8 -XX:MaxMetaspaceSize=1024m"
